.. _guide_analyze_results:

###################
Analyze the results
###################

During execution, the simulation writes results to a ``.nio`` file. These files use the HDF5 (Hierarchical Data Format version 5)
format, which is widely employed in scientific computing, engineering, and data analysis.

The I/O workflow is managed using the `Neo Python package <https://neo.readthedocs.io/en/latest/index.html>`_, a library designed for handling electrophysiology data.

HDF5 files can store data in blocks, which allows for efficient management and organization of large datasets.
In our case, we will have only one block.

For instance, to extract spiketrain data from a ``filename.nio`` file, use the following code:

.. code-block:: python

    from neo import io

    my_file_name = "filename.nio"
    block = io.NixIO(filename, mode="ro").read_all_blocks()[0]
    my_spiketrains = block.segments[0].spiketrains

The :guilabel:`my_spiketrains` object is a list containing the spiketrains generated by :guilabel:`background noise`,
as well as by :guilabel:`base type` and :guilabel:`top type` cells.
Each ``spiketrain`` object holds information about the device name, the size of the cell population,
and an array of the IDs of spiking cells, accessible through the annotations attribute:

.. code-block:: python

    for spike_t in my_spiketrains:                 # Iterate over all spiketrains
        name = spike_t.annotations['device']       # Retrieve the device name
        size = spike_t.annotations['pop_size']     # Retrieve the size of the cell population
        cell_list = spike_t.annotations['senders'] # Retrieve the list of cell IDs
        print(name, size, cell_list)
        print(spike_t)                              # Print the spiketrain



.. rubric:: Next steps:

.. grid:: 1 1 1 2
    :gutter: 1


    .. grid-item-card:: :octicon:`fold-up;1em;sd-text-warning` Make your own python project
        :link: projects
        :link-type: ref

        Learn how to configure your python project for BSB.

    .. grid-item-card:: :octicon:`gear;1em;sd-text-warning` Learn about components
       :link: main-components
       :link-type: ref

       Explore more about the main components.

    .. grid-item-card:: :octicon:`device-camera-video;1em;sd-text-warning` Examples
        :link: examples
        :link-type: ref

        Explore more advanced examples

    .. grid-item-card:: :octicon:`tools;1em;sd-text-warning` Make custom components
       :link: components
       :link-type: ref

       Learn how to write your own components to e.g. place or connect cells.